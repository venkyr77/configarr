diff --git a/src/quality-profiles.ts b/src/quality-profiles.ts
index 1cda8dd..5459abe 100644
--- a/src/quality-profiles.ts
+++ b/src/quality-profiles.ts
@@ -510,52 +510,13 @@ export const calculateQualityProfilesDiff = async (
   }
 
   for (const unmanagedServerQp of serverQpsUnmanaged) {
-    // CFs matching. Hint: make sure to execute the method with updated CFs. Otherwise if we create CFs and update existing profiles those could be missing.
-    const serverProfileCFMap = new Map(unmanagedServerQp.formatItems!.map((obj) => [obj.name!, obj]));
-    const scoringForQP = scoring.get(unmanagedServerQp.name!);
-    let scoringDiff = false;
-    const changeList: string[] = [];
-
-    if (scoringForQP != null) {
-      const newCFFormats: MergedProfileFormatItemResource[] = [];
-
-      for (const [scoreKey, scoreValue] of scoringForQP.entries()) {
-        const serverCF = serverProfileCFMap.get(scoreKey);
-        serverProfileCFMap.delete(scoreKey);
-
-        // TODO (1): check where best handled
-        if (scoreValue.score == null) {
-          newCFFormats.push({ ...serverCF });
-        } else {
-          if (serverCF?.score !== scoreValue.score) {
-            scoringDiff = true;
-            changeList.push(`CF diff '${scoreValue.name}': server: '${serverCF?.score}' - expected: '${scoreValue.score}'`);
-            newCFFormats.push({ ...serverCF, score: scoreValue.score });
-          } else {
-            newCFFormats.push({ ...serverCF });
-          }
-        }
-      }
-
-      const missingCfs = Array.from(serverProfileCFMap.values());
-
-      newCFFormats.push(...missingCfs);
-
-      unmanagedServerQp.formatItems = newCFFormats;
-    } else {
-      logger.debug(`No custom format scoring for unmanaged QualityProfile '${unmanagedServerQp.name!}' found`);
-    }
-
-    logger.debug(`Unmanaged QualityProfile (${unmanagedServerQp.name}) - In Sync: ${changeList.length <= 0}, CF Changes: ${scoringDiff}}`);
-
-    if (scoringDiff) {
-      changedQPs.push(unmanagedServerQp);
-    } else {
-      noChangedQPs.push(unmanagedServerQp.name!);
-    }
-
-    if (changeList.length > 0) {
-      logger.debug(changeList, `ChangeList for unmanaged QualityProfile '${unmanagedServerQp.name}'`);
+    if (unmanagedServerQp?.id == null) continue;
+    try {
+      const del = (api as any).deleteQualityProfile ?? ((id: number) => (api as any).delete(`/api/v3/qualityprofile/${id}`));
+      await del(unmanagedServerQp.id);
+      logger.info(`Deleted unmanaged QualityProfile '${unmanagedServerQp.name}' (id=${unmanagedServerQp.id})`);
+    } catch (e) {
+      logger.warn(`Failed to delete unmanaged QualityProfile '${unmanagedServerQp?.name}' (id=${unmanagedServerQp?.id}): ${e}`);
     }
   }
 
